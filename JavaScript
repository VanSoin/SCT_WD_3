const board = document.querySelector("#board");
const cells = document.querySelectorAll("[data-cell]");
const statusText = document.querySelector("#statusText");
const restartButton = document.querySelector("#restartButton");

let currentPlayer = "X";
let gameState = ["", "", "", "", "", "", "", "", ""];
let gameActive = true;

const winningConditions = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
];

function handleCellClick(e) {
    const cell = e.target;
    const cellIndex = Array.from(cells).indexOf(cell);

    // If the cell is already filled or the game is over, return
    if (gameState[cellIndex] !== "" || !gameActive) {
        return;
    }

    // Update the clicked cell
    updateCell(cell, cellIndex);
    
    // Check for winner or draw
    checkWinnerOrDraw();
}

function updateCell(cell, index) {
    gameState[index] = currentPlayer;
    cell.textContent = currentPlayer;
}

function changePlayer() {
    currentPlayer = currentPlayer === "X" ? "O" : "X";
    statusText.textContent = `It's ${currentPlayer}'s turn`;
}

function checkWinnerOrDraw() {
    let roundWon = false;
    
    for (let i = 0; i < winningConditions.length; i++) {
        const condition = winningConditions[i];
        const a = gameState[condition[0]];
        const b = gameState[condition[1]];
        const c = gameState[condition[2]];
        
        // Skip if any of the cells in the condition are not filled
        if (a === "" || b === "" || c === "") {
            continue;
        }
        
        // If all cells match, the round is won
        if (a === b && b === c) {
            roundWon = true;
            break;
        }
    }

    if (roundWon) {
        statusText.textContent = `${currentPlayer} Wins!`;
        gameActive = false;
    } else if (!gameState.includes("")) {
        // If no winner but the board is full, it's a draw
        statusText.textContent = `It's a draw!`;
        gameActive = false;
    } else {
        // No winner, and the game is still going, switch players
        changePlayer();
    }
}

function restartGame() {
    currentPlayer = "X";
    gameState = ["", "", "", "", "", "", "", "", ""];
    gameActive = true;
    cells.forEach(cell => {
        cell.textContent = "";
    });
    statusText.textContent = `It's ${currentPlayer}'s turn`;
}

// Add event listeners to the cells and restart button
cells.forEach(cell => cell.addEventListener("click", handleCellClick));
restartButton.addEventListener("click", restartGame);

statusText.textContent = `It's ${currentPlayer}'s turn`;
